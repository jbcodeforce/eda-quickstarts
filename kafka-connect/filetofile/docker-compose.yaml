services:
  kafka:
    image: quay.io/strimzi/kafka:latest-kafka-3.8.0
    container_name: kafka
    hostname: kafka
    command: [
      "sh", "-c",
        "/opt/kafka/bin/kafka-storage.sh format -t $$(/opt/kafka/bin/kafka-storage.sh random-uuid) -c /opt/kafka/config/kraft/server.properties && /opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/kraft/server.properties"
    ]
    user: 1000:1000
    ports:
      - 9092:9092
      - 29092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_LISTENERS: EXTERNAL://0.0.0.0:9092,INTERNAL://kafka:29092, CONTROLLER://kafka:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      
      KAFKA_KRAFT_CONTROLLER_LISTENERS: PLAINTEXT://:9093
      KAFKA_KRAFT_CLUSTER_ID: kraft-cluster
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      LOG_DIRS: /tmp/logs
    volumes:
      - ./logs:/tmp/logs
  addTopics:
    image:  quay.io/strimzi/kafka:latest-kafka-3.8.0
    depends_on:
      - kafka
    entrypoint: [ "bash",  "-c", "/opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:29092 --create  --if-not-exists --replication-factor 1 --partitions 1 --topic filedata" ]
  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - kafka
  kconnect:
    image: quay.io/strimzi/kafka:latest-kafka-3.8.0
    container_name: kconnect
    hostname: kconnect
    user: 1000:1000
    depends_on:
      - addTopics
    ports:
      - 8083:8083
    volumes:
      - ${PWD}:/home/kafka/kconnect/
      - ${PWD}/logs:/opt/kafka/logs
    command: [
      "sh", "-c",
      "bin/connect-standalone.sh /home/kafka/kconnect/connect-standalone.properties /home/kafka/kconnect/source-connector.properties /home/kafka/kconnect/sink-connector.properties"
    ]